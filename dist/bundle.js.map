{"version":3,"file":"bundle.js","sources":["../src/components/SegmentedPicker/SegmentedPickerPropTypes.ts","../src/config/constants.ts","../src/components/SegmentedPicker/SegmentedPickerStyles.ts","../src/components/Toolbar/ToolbarStyles.ts","../src/components/Toolbar/Toolbar.tsx","../src/components/SelectionMarker/SelectionMarkerStyles.ts","../src/components/SelectionMarker/SelectionMarker.tsx","../src/components/UIPicker/index.ts","../src/services/Cache/Cache.ts","../src/services/PromiseFactory/PromiseFactory.ts","../src/services/UIPickerManager/UIPickerManager.ts","../src/components/SegmentedPicker/SegmentedPicker.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const defaultProps = {\n  native: false,\n  options: [],\n  visible: false,\n  defaultSelections: {},\n  size: 0.45,\n  confirmText: 'Done',\n  cancelText: 'cancel',\n  nativeTestID: undefined,\n  confirmTextColor: '#0A84FF',\n  pickerItemTextColor: '#a6a6a6',\n  selectedItemTextColor: '#000000',\n  toolbarBackgroundColor: '#FAFAF8',\n  toolbarBorderColor: '#E7E7E7',\n  selectionBackgroundColor: '#F8F8F8',\n  selectionBorderColor: '#C9C9C9',\n  fontSize: 19,\n  backgroundColor: '#FFFFFF',\n\n  onValueChange: () => {},\n  onCancel: () => {},\n  onConfirm: () => {},\n};\n\nexport const propTypes = {\n  // Core Props\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          label: PropTypes.string.isRequired,\n          value: PropTypes.string.isRequired,\n          key: PropTypes.string,\n          testID: PropTypes.string,\n        }),\n      ).isRequired,\n      testID: PropTypes.string,\n      flex: PropTypes.number,\n    }),\n  ).isRequired,\n  visible: PropTypes.bool,\n  defaultSelections: PropTypes.objectOf((\n    propValue,\n    key,\n    componentName,\n    location,\n    propName,\n  ) => {\n    const column = propValue[key];\n    return (column && String(column) !== column) ? (\n      new Error(\n        `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`.`\n        + ' Must be in the format: `{column1: \\'value\\', column2: \\'value\\', ...}`',\n      )\n    ) : null;\n  }),\n  size: (props: any, propName: 'size', componentName: string) => {\n    const value = props[propName];\n    if (value === undefined) return null;\n    return (value < 0 || value > 1) ? (\n      new Error(\n        `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`.`\n        + ' Must be a floating point between 0-1 representing the screen percentage to cover.'\n        + ' The default value is `0.45` (eg 45%).',\n      )\n    ) : null;\n  },\n  confirmText: PropTypes.string,\n  cancelText: PropTypes.string,\n  nativeTestID: PropTypes.string,\n  // Styling\n  fontSize: PropTypes.number,\n  selectedItemTextColor: PropTypes.string,\n  confirmTextColor: PropTypes.string,\n  pickerItemTextColor: PropTypes.string,\n  toolbarBackgroundColor: PropTypes.string,\n  toolbarBorderColor: PropTypes.string,\n  fontSizeToolbar: PropTypes.number,\n  selectionBackgroundColor: PropTypes.string,\n  selectionBorderColor: PropTypes.string,\n  fontFamilyConfirmText: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  // Events\n  onValueChange: PropTypes.func,\n  onCancel: PropTypes.func,\n  onConfirm: PropTypes.func,\n};\n","/**\n * Time in milliseconds for the list to fade in and out when displayed.\n */\nexport const ANIMATION_TIME = 300;\n\n/**\n * Fixed sizing for list items and other UI elements.\n */\nexport const GUTTER_WIDTH = 16;\nexport const GUTTER_HEIGHT = 3;\nexport const ITEM_HEIGHTS = { ios: 42, default: 42 };\nexport const TEXT_CORRECTION = 2;\n\n/**\n * Constants used for automatically generated Test ID's (used for E2E testing).\n */\nexport const TEST_IDS = {\n  PICKER: 'SEGMENTED_PICKER',\n  CONFIRM_BUTTON: 'SEGMENTED_PICKER_CONFIRM',\n  CLOSE_AREA: 'SEGMENTED_PICKER_CLOSE_AREA',\n};\n\n/**\n * Measurement and internal lifecycle tracking states.\n */\nexport const TRACKING = {\n  FLAT_LIST_REF: 'FLAT_LIST_REF_',\n  LAST_SCROLL_OFFSET: 'LAST_SCROLL_OFFSET_',\n  SCROLL_DIRECTION: 'SCROLL_DIRECTION_',\n  IS_DRAGGING: 'IS_DRAGGING_',\n  IS_MOMENTUM_SCROLLING: 'IS_MOMENTUM_SCROLLING_',\n  IS_DIRTY: 'IS_DIRTY_',\n};\n","import { StyleSheet, Platform, Dimensions } from 'react-native';\nimport {\n  GUTTER_WIDTH,\n  GUTTER_HEIGHT,\n  ITEM_HEIGHTS,\n  TEXT_CORRECTION,\n} from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nexport default StyleSheet.create({\n  modalContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    flex: 1,\n    flexDirection: 'column',\n  },\n\n  closeableContainer: {\n    width: '100%',\n  },\n\n  pickerContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n\n  selectableArea: {\n    flex: 1,\n    alignSelf: 'stretch',\n  },\n\n  pickerColumns: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingTop: GUTTER_HEIGHT,\n    paddingRight: 0,\n    paddingBottom: GUTTER_HEIGHT,\n  },\n\n  pickerColumn: {\n    flex: 1,\n    position: 'relative',\n  },\n\n  pickerList: {\n    width: '100%',\n    height: 'auto',\n  },\n\n  pickerItem: {\n    width: '100%',\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n\n  pickerItemText: {\n    fontSize: 15,\n    paddingTop: 5,\n    paddingRight: 0,\n    paddingBottom: TEXT_CORRECTION + 5,\n    paddingLeft: 0,\n    textAlign: 'center',\n  },\n\n  nativePickerContainer: {\n    width: Dimensions.get('window').width - (GUTTER_WIDTH * 2),\n    height: '100%',\n    marginLeft: GUTTER_WIDTH,\n  },\n\n  nativePicker: {\n    width: '100%',\n    height: '100%',\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport { GUTTER_WIDTH, TEXT_CORRECTION, ITEM_HEIGHTS } from '../../config/constants';\n\nexport default StyleSheet.create({\n  toolbarContainer: {\n    width: '100%',\n    height: 60,\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    paddingTop: 16,\n    paddingBottom: 16,\n  },\n\n  toolbarConfirmContainer: {\n    height: '100%',\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n\n  toolbarCancelContainer: {\n    height: '100%',\n    flex: 1,\n    alignItems: 'flex-start',\n    width: 30,\n\n\n  },\n\n  toolbarConfirmText: {\n    fontSize: 23,\n    paddingTop: 0,\n    paddingRight: GUTTER_WIDTH,    \n    paddingBottom: TEXT_CORRECTION,\n    paddingLeft: GUTTER_WIDTH,\n    fontWeight: '300',\n  },\n\n  toolbarCancelText: {\n    fontSize: 23,\n    paddingTop: 0,\n    paddingRight: GUTTER_WIDTH,\n    paddingBottom: TEXT_CORRECTION,\n    paddingLeft: GUTTER_WIDTH,\n    fontWeight: '300',\n  },\n});\n","import React, { ReactElement } from 'react';\nimport { View, TouchableOpacity, Text } from 'react-native';\nimport styles from './ToolbarStyles';\nimport { TEST_IDS } from '../../config/constants';\n\n\ninterface Props {\n  confirmText: string;\n  cancelText: string;\n  confirmTextColor: string;\n  toolbarBackground: string;\n  toolbarBorderColor: string;\n  fontSizeToolbar: number;\n  fontFamilyConfirmText: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n}\n\n/**\n * Top action bar that displays above the picker modal which allows a user to confirm\n * their selections and close the modal.\n */\nexport default ({\n  confirmText,\n  cancelText,\n  confirmTextColor,\n  toolbarBackground,\n  toolbarBorderColor,\n  fontSizeToolbar,\n  fontFamilyConfirmText,\n  onConfirm,\n  onCancel\n}: Props): ReactElement => (\n  <View\n    style={[\n      styles.toolbarContainer,\n      {\n        backgroundColor: toolbarBackground,\n        borderBottomColor: toolbarBorderColor,\n      },\n    ]}\n  >\n    <View style={styles.toolbarCancelContainer}>\n      <TouchableOpacity\n        activeOpacity={0.4}\n        onPress={onCancel}\n        testID={TEST_IDS.CONFIRM_BUTTON}\n      >\n        <Text style={[styles.toolbarCancelText, { color: confirmTextColor, fontSize: fontSizeToolbar, fontFamily: fontFamilyConfirmText }]}>\n          {cancelText}\n        </Text>\n      </TouchableOpacity>\n    </View>\n    <View style={styles.toolbarConfirmContainer}>\n      <TouchableOpacity\n        activeOpacity={0.4}\n        onPress={onConfirm}\n        testID={TEST_IDS.CONFIRM_BUTTON}\n      >\n        <Text style={[styles.toolbarConfirmText, { color: confirmTextColor, fontSize: fontSizeToolbar, fontFamily: fontFamilyConfirmText }]}>\n          {confirmText}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n);\n","import { StyleSheet, Platform } from 'react-native';\nimport { ITEM_HEIGHTS, GUTTER_WIDTH } from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nexport default StyleSheet.create({\n  selectionMarkerContainer: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: GUTTER_WIDTH,\n    paddingRight: GUTTER_WIDTH,\n  },\n\n  // Eliminates border rendering inconsistencies between iOS & Android\n  selectionMarkerBorder: {\n    width: '100%',\n    height: Platform.select({ ios: 0.6, android: 0.7 }),\n  },\n\n  selectionMarker: {\n    width: '100%',\n    height: ITEM_HEIGHT,\n    borderRadius: 8,\n  },\n});\n","import React, { ReactElement } from 'react';\nimport { View } from 'react-native';\nimport styles from './SelectionMarkerStyles';\n\ninterface Props {\n  backgroundColor: string;\n  borderColor: string;\n}\n\n/**\n * Horizontal bar used to indicate the current picker selections.\n */\nexport default ({\n  backgroundColor,\n  borderColor,\n}: Props): ReactElement => (\n  <View style={styles.selectionMarkerContainer}>\n    <View\n      style={[\n        styles.selectionMarkerBorder,\n        { backgroundColor: borderColor },\n      ]}\n    />\n    <View style={[styles.selectionMarker, { backgroundColor }]} />\n    <View\n      style={[\n        styles.selectionMarkerBorder,\n        { backgroundColor: borderColor },\n      ]}\n    />\n  </View>\n);\n","import { requireNativeComponent } from 'react-native';\n\nexport default requireNativeComponent('UIPicker');\n","export type StoreItem = any;\n\nexport interface Store {\n  [key: string]: any;\n}\n\n/**\n * This class is utilised by the main Segmented Picker component as a fast synchronous\n * cache alternative to the regular React component state mechanism.\n */\nexport default class Cache {\n  store: Store;\n\n  constructor(initialState: Store = {}) {\n    this.store = {\n      ...initialState,\n    };\n  }\n\n  /**\n   * Returns the entire store value without any modification.\n   * @return {Store}\n   */\n  get current(): Store {\n    return this.store;\n  }\n\n  /**\n   * Attempts to safely fetch the cached value for the specified key.\n   * @param {string} key\n   * @return {StoreItem | null}\n   */\n  get = (key: string): StoreItem | null => {\n    if (key in this.store) {\n      return this.store[key];\n    }\n    return null;\n  };\n\n  /**\n   * Creates (or replaces) a value in the cache for the specified key.\n   * @param {string} key\n   * @param {StoreItem} value\n   * @return {void}\n   */\n  set = (key: string, value: StoreItem): void => {\n    this.store[key] = value;\n  };\n\n  /**\n   * Completely resets the cache to a blank state.\n   * @return {void}\n   */\n  purge = (): void => {\n    this.store = {};\n  };\n}\n","interface PromiseExecutor {\n  resolve: any;\n  reject: any;\n}\n\n/**\n * This class is used to store promises against an incrementing integer so that the\n * promise can be resolved from outside the context of the original block.\n *\n * An example of this is when React needs to request asynchronous data from a Native\n * UI Component. Communication to UI components across the React Native bridge is\n * limited to 1-way, so the value must be emitted afterwards using an event which is\n * not immediately available to the original JavaScript method. So to get around this\n * limitation, we empower the React event subscription to resolve the promise.\n */\nexport default class PromiseFactory {\n  private promises: Map<Number, PromiseExecutor> = new Map();\n  private nextPromiseId: number = 0;\n\n  /**\n   * Add a promise to the internal store and receive it's unique `id`.\n   * @param {PromiseExecutor} e\n   * @return {number} Unique `id` for the added promise.\n   */\n  add = (e: PromiseExecutor): number => {\n    const id = Number(this.nextPromiseId);\n    this.promises.set(id, e);\n    this.nextPromiseId += 1;\n    return id;\n  };\n\n  /**\n   * Get a promise by it's `id`.\n   * @param {number} id\n   * @return {PromiseExecutor | undefined}\n   */\n  get = (id: number): PromiseExecutor | undefined => this.promises.get(id);\n\n  /**\n   * Completely deletes a promise from the factory using it's unique `id`.\n   * @param {number} id\n   * @return {boolean}\n   */\n  delete = (id: number): boolean => this.promises.delete(id);\n}\n","import React from 'react';\nimport { UIManager, findNodeHandle } from 'react-native';\nimport PromiseFactory from '../PromiseFactory';\nimport { UIPickerSelectionsEvent } from '../../config/interfaces';\n\ninterface Selections {\n  [column: string]: string;\n}\n\n/**\n * Methods to control and observe the native iOS `UIPickerView`.\n */\nexport default class UIPickerManager {\n  private ref: React.RefObject<any> = React.createRef();\n  private promiseFactory: PromiseFactory = new PromiseFactory();\n\n  get reactRef(): React.RefObject<any> {\n    return this.ref;\n  }\n\n  /**\n   * Programmatically select an index in the picker.\n   * @param {number} index: List index of the picker item to select.\n   * @param {string} columnKey: Unique key of the column to select.\n   * @param {boolean = true} animated: Should the selection \"snap\" or animate smoothly into place?\n   * @return {void}\n   */\n  selectIndex = (index: number, column: string, animated: boolean = true): void => {\n    if (this.ref.current) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.ref.current),\n        (UIManager as any).UIPicker.Commands.selectIndex,\n        [index, column, animated],\n      );\n    }\n  };\n\n  /**\n   * Returns the current picker item selections as the appear on the user's screen.\n   * @return {Promise<Selections>}\n   */\n  getCurrentSelections = (): Promise<Selections> => {\n    if (!this.ref.current) {\n      return Promise.resolve({});\n    }\n    const promise: Promise<Selections> = new Promise((resolve, reject) => {\n      const pid = this.promiseFactory.add({ resolve, reject });\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.ref.current),\n        (UIManager as any).UIPicker.Commands.emitSelections,\n        [pid],\n      );\n    });\n    return promise;\n  };\n\n  /**\n   * Ingests emitted selections from the native module and resolves the original promise\n   * from `getCurrentSelections` using it's stored resolver in the Promise Factory.\n   * @param {UIPickerSelectionsEvent}\n   * @return {void}\n   */\n  ingestSelections = (\n    { nativeEvent: { selections, pid } }: UIPickerSelectionsEvent,\n  ): void => {\n    const promise = this.promiseFactory.get(pid);\n    if (promise) {\n      promise.resolve(selections);\n      this.promiseFactory.delete(pid);\n    }\n  };\n}\n","import React, { Component, ReactElement } from 'react';\nimport {\n  Platform,\n  Modal,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  FlatList,\n  View,\n  Text,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  \n} from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { defaultProps, propTypes } from './SegmentedPickerPropTypes';\nimport styles from './SegmentedPickerStyles';\nimport Toolbar from '../Toolbar';\nimport SelectionMarker from '../SelectionMarker';\nimport UIPicker from '../UIPicker';\nimport Cache from '../../services/Cache';\nimport UIPickerManager from '../../services/UIPickerManager';\nimport {\n  PickerColumn,\n  PickerItem,\n  PickerOptions,\n  Selections,\n  SelectionEvent,\n  UIPickerValueChangeEvent,\n} from '../../config/interfaces';\nimport {\n  ANIMATION_TIME,\n  GUTTER_HEIGHT,\n  ITEM_HEIGHTS,\n  TEST_IDS,\n  TRACKING,\n} from '../../config/constants';\n\nconst ITEM_HEIGHT = Platform.select(ITEM_HEIGHTS);\n\nconst {\n  FLAT_LIST_REF,\n  LAST_SCROLL_OFFSET,\n  SCROLL_DIRECTION,\n  IS_DRAGGING,\n  IS_MOMENTUM_SCROLLING,\n  IS_DIRTY,\n} = TRACKING;\n\nexport interface Props {\n  native: boolean;\n  options: PickerOptions;\n  visible: boolean;\n  defaultSelections: Selections;\n  size: number;\n  confirmText: string;\n  cancelText: string;\n  nativeTestID: string;\n  // Styling\n  fontSizeToolbar: number;\n  fontFamilyConfirmText: string;\n  fontSize: number;\n  selectedItemTextColor: string;\n  confirmTextColor: string;\n  pickerItemTextColor: string;\n  toolbarBackgroundColor: string;\n  toolbarBorderColor: string;\n  selectionBackgroundColor: string;\n  selectionBorderColor: string;\n  backgroundColor: string;\n  // Events\n  onValueChange: (event: SelectionEvent) => void;\n  onCancel: (event: Selections) => void,\n  onConfirm: (event: Selections) => void,\n}\n\ninterface State {\n  visible: boolean;\n  pickersHeight: number;\n  selected: Selections;\n}\n\ninterface RenderablePickerItem extends PickerItem {\n  key: string;\n  column: string;\n}\n\nexport default class SegmentedPicker extends Component<Props, State> {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps as Partial<Props>;\n\n  /**\n   * @static\n   * Decorates the `options` prop with necessary defaults for missing values.\n   * @param options {PickerOptions}\n   * @return {PickerOptions}\n   */\n  static ApplyPickerOptionDefaults = (options: PickerOptions): PickerOptions => (\n    options.map(column => ({\n      ...column,\n      flex: column.flex || 1,\n    }))\n  );\n\n  cache: Cache = new Cache(); // Used as an internal synchronous state (fast)\n  uiPickerManager: UIPickerManager = new UIPickerManager();\n  selectionChanges: Selections = {};\n  modalContainerRef: React.RefObject<any> = React.createRef();\n  pickerContainerRef: React.RefObject<any> = React.createRef();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      visible: false,\n      pickersHeight: 0,\n      selected: {},\n    };\n  }\n\n  /**\n   * Used in rare circumstances where this component is mounted with the `visible`\n   * prop set to true. We must animate the picker in immediately.\n   */\n  componentDidMount(): void {\n    if (this.props.visible === true) {\n      this.show();\n    }\n  }\n\n  /**\n   * Animates in-and-out when toggling picker visibility with the `visible` prop.\n   */\n  componentDidUpdate(prevProps: Props): void {\n    const { visible: visibleProp } = this.props;\n    const { visible: visibleState } = this.state;\n    if (visibleProp === true && prevProps.visible !== true && visibleState !== true) {\n      this.show();\n    }\n    if (visibleProp === false && prevProps.visible === true) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Make the picker visible on the screen.\n   * External Usage: `ref.current.show()`\n   * @return {Promise<void>}\n   */\n  show = (): Promise<void> => {\n    this.setState({ visible: true });\n    return new Promise(resolve => setTimeout(resolve, ANIMATION_TIME));\n  };\n\n  /**\n   * Hide the picker from the screen.\n   * External Usage: `ref.current.hide()`\n   * @return {Promise<void>}\n   */\n  hide = async (): Promise<void> => (\n    new Promise(async (resolve) => {\n      if (Platform.OS === 'ios') {\n        this.setState({ visible: false }, async () => {\n          await new Promise(done => setTimeout(done, ANIMATION_TIME));\n          this.cache.purge();\n          resolve();\n        });\n      } else {\n        await this.modalContainerRef.current?.fadeOut(ANIMATION_TIME);\n        this.setState({ visible: false }, () => {\n          this.cache.purge();\n          resolve();\n        });\n      }\n    })\n  );\n\n  /**\n   * Selects a specific picker item `label` in the picklist and focuses it.\n   * External Usage: `ref.current.selectLabel()`\n   * @param {string} label\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @param {boolean = false} zeroFallback: Select the first list item if not found.\n   * @return {void}\n   */\n  selectLabel = (\n    label: string,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n    zeroFallback: boolean = false,\n  ): void => {\n    const index = this.findItemIndexByLabel(label, column);\n    if (index !== -1) {\n      this.selectIndex(index, column, animated, emitEvent);\n    } else if (this.columnItems(column).length > 0 && zeroFallback) {\n      this.selectIndex(0, column, animated, emitEvent);\n    }\n  };\n\n  /**\n   * Selects a specific picker item `value` in the picklist and focuses it.\n   * External Usage: `ref.current.selectValue()`\n   * @param {string} value\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @param {boolean = false} zeroFallback: Select the first list item if not found.\n   * @return {void}\n   */\n  selectValue = (\n    value: string,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n    zeroFallback: boolean = false,\n  ): void => {\n    const index = this.findItemIndexByValue(value, column);\n    if (index !== -1) {\n      this.selectIndex(index, column, animated, emitEvent);\n    } else if (this.columnItems(column).length > 0 && zeroFallback) {\n      this.selectIndex(0, column, animated, emitEvent);\n    }\n  };\n\n  /**\n   * Selects a specific label in the picklist and focuses it using it's list index.\n   * External Usage: `ref.current.selectLabel()`\n   * @param {number} index\n   * @param {string} column\n   * @param {boolean = true} animated\n   * @param {boolean = true} emitEvent: Specify whether to call the `onValueChange` event.\n   * @return {void}\n   */\n  selectIndex = (\n    index: number,\n    column: string,\n    animated: boolean = true,\n    emitEvent: boolean = true,\n  ): void => {\n    if (this.isNative()) {\n      this.uiPickerManager.selectIndex(index, column, animated);\n      return;\n    }\n    const { onValueChange } = this.props;\n    const list = this.cache.get(`${FLAT_LIST_REF}${column}`);\n    if (!list) {\n      return;\n    }\n    list.scrollToIndex({\n      index,\n      animated,\n    });\n    const items = this.columnItems(column);\n    if (!this.selectionChanges[column]\n      || (this.selectionChanges[column]\n        && this.selectionChanges[column] !== items[index].value)\n    ) {\n      this.selectionChanges = {\n        ...this.selectionChanges,\n        [column]: items[index].value,\n      };\n      this.setState({ selected: this.selectionChanges });\n      if (emitEvent) {\n        onValueChange({ column, value: items[index].value });\n      }\n    }\n  };\n\n  /**\n   * Returns the current picklist selections as they appear on the UI.\n   * External Usage: `await ref.current.getCurrentSelections()`\n   * @return {Promise<Selections>} {column1: 'value', column2: 'value', ...}\n   */\n  getCurrentSelections = async (): Promise<Selections> => {\n    if (this.isNative()) {\n      const nativeSelections = await this.uiPickerManager.getCurrentSelections();\n      return nativeSelections;\n    }\n    const { options } = this.props;\n    return Promise.resolve(\n      options.reduce((columns, column) => {\n        const lastOffset = this.cache.get(`${LAST_SCROLL_OFFSET}${column.key}`);\n        const index = this.nearestOptionIndex(\n          lastOffset || 0,\n          column.key,\n        );\n        const items = this.columnItems(column.key);\n        return {\n          ...columns,\n          [column.key]: items[index]?.value,\n        };\n      }, {}),\n    );\n  };\n\n  /**\n   * @private\n   * Should the picker be powered by a native module, or with plain JavaScript?\n   * Currently only available as an opt-in option for iOS devices.\n   * @return {boolean}\n   */\n  private isNative = (): boolean => (\n    this.props.native && Platform.OS === 'ios'\n  );\n\n  /**\n   * Filters the `options` prop for a specific column `key`.\n   * @param {string} key\n   * @return {PickerColumn}\n   */\n  private getColumn = (key: string): PickerColumn => (\n    this.props.options.filter(c => c.key === key)[0]\n  );\n\n  /**\n   * Returns the picker list items for a specific column `key`.\n   * @param {string} key\n   * @return {Array<PickerItem>}\n   */\n  private columnItems = (key: string): Array<PickerItem> => this.getColumn(key)?.items || [];\n\n  /**\n   * @private\n   * @param {string} label\n   * @param {string} column\n   * @return {number}\n   */\n  private findItemIndexByLabel = (label: string, column: string): number => {\n    const items = this.columnItems(column);\n    return items.findIndex(item => (\n      item.label === label\n    ));\n  };\n\n  /**\n   * @private\n   * @param {string} value\n   * @param {string} column\n   * @return {number}\n   */\n  private findItemIndexByValue = (value: string, column: string): number => {\n    const items = this.columnItems(column);\n    return items.findIndex(item => (\n      item.value === value\n    ));\n  };\n\n  /**\n   * @private\n   * Focuses the default picklist selections.\n   * @return {void}\n   */\n  private setDefaultSelections = (): void => {\n    const { options, defaultSelections } = this.props;\n    const dirty = this.cache.get(IS_DIRTY);\n    if (!dirty) {\n      setTimeout(() => {\n        // User defined default selections\n        Object.keys(defaultSelections)\n          .forEach(column => (\n            this.selectValue(\n              defaultSelections[column],\n              column,\n              false,\n              false,\n              true,\n            )\n          ));\n\n        // Set all other selections to index 0\n        options\n          .filter(column => (\n            !Object.keys(defaultSelections).includes(column.key)\n            && this.columnItems(column.key).length > 0\n          ))\n          .forEach(column => (\n            this.selectIndex(0, column.key, false, false)\n          ));\n      }, 0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} column\n   * @param {object} ref: The column's rendered FlatList component.\n   * @return {void}\n   */\n  private setFlatListRef = (column: string, ref: FlatList<any> | null): void => {\n    if (ref) {\n      this.cache.set(`${FLAT_LIST_REF}${column}`, ref);\n      this.setDefaultSelections();\n    }\n  };\n\n  /**\n   * @private\n   * @return {void}\n   */\n  private measurePickersHeight = (event: any): void => {\n    const { height } = event.nativeEvent.layout;\n    this.setState({ pickersHeight: height });\n  };\n\n  /**\n   * @private\n   * Calculates the padding top and bottom for the pickers so that the first and\n   * last list items are centered in the marker when fully scrolled up or down.\n   * @return {number}\n   */\n  private pickersVerticalPadding = (): number => {\n    const { pickersHeight } = this.state;\n    return (pickersHeight - ITEM_HEIGHT - (GUTTER_HEIGHT * 2)) / 2;\n  };\n\n  /**\n   * @private\n   * Determines the index of the nearest option in the list based off the specified Y\n   * scroll offset.\n   * @param {number} offsetY: The scroll view content offset from react native (should\n   * always be a positive integer).\n   * @param {string} column\n   * @return {number}\n   */\n  private nearestOptionIndex = (offsetY: number, column: string): number => {\n    const scrollDirection = this.cache.get(`${SCROLL_DIRECTION}${column}`) || 1;\n    const rounding = (scrollDirection === 0) ? 'floor' : 'ceil';\n    const adjustedOffsetY = (scrollDirection === 0) ? (\n      (offsetY / ITEM_HEIGHT) + 0.35\n    ) : (\n      (offsetY / ITEM_HEIGHT) - 0.35\n    );\n    let nearestArrayMember = Math[rounding](adjustedOffsetY) || 0;\n    // Safety checks making sure we don't return an out of range index\n    const columnSize = this.columnItems(column).length;\n    if (Math.sign(nearestArrayMember) === -1) {\n      nearestArrayMember = 0;\n    } else if (nearestArrayMember > columnSize - 1) {\n      nearestArrayMember = columnSize - 1;\n    }\n    return nearestArrayMember;\n  };\n\n  /**\n   * @private\n   * Calculates the current scroll direction based off the last and current Y offsets.\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onScroll = (event: NativeSyntheticEvent<NativeScrollEvent>, column: string): void => {\n    if (!event.nativeEvent) return;\n    const { y } = event.nativeEvent.contentOffset;\n    const lastScrollOffset = this.cache.get(`${LAST_SCROLL_OFFSET}${column}`);\n    if (lastScrollOffset !== null && lastScrollOffset < y) {\n      this.cache.set(`${SCROLL_DIRECTION}${column}`, 1); // Down\n    } else {\n      this.cache.set(`${SCROLL_DIRECTION}${column}`, 0); // Up\n    }\n    this.cache.set(`${LAST_SCROLL_OFFSET}${column}`, y);\n  };\n\n  /**\n   * @private\n   * @param {string} column\n   * @return {void}\n   */\n  private onScrollBeginDrag = (column: string): void => {\n    this.cache.set(`${IS_DRAGGING}${column}`, true);\n    const dirty = this.cache.get(IS_DIRTY);\n    if (!dirty) {\n      this.cache.set(IS_DIRTY, true);\n    }\n  };\n\n  /**\n   * @private\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onScrollEndDrag = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_DRAGGING}${column}`, false);\n    if (Platform.OS === 'ios' && !this.cache.get(`${IS_MOMENTUM_SCROLLING}${column}`)) {\n      // Not required on Android because all scrolls exit as momentum scrolls,\n      // so the below method has already been called prior to this event.\n      // Timeout is to temporarily allow raising fingers.\n      this.selectIndexFromScrollPosition(event, column, 280);\n    }\n  };\n\n  /**\n   * @private\n   * @param {object} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onMomentumScrollBegin = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_MOMENTUM_SCROLLING}${column}`, true);\n  };\n\n  /**\n   * @private\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @return {void}\n   */\n  private onMomentumScrollEnd = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n  ): void => {\n    this.cache.set(`${IS_MOMENTUM_SCROLLING}${column}`, false);\n    if (Platform.OS === 'ios') {\n      event.persist();\n      this.selectIndexFromScrollPosition(event, column, 50);\n    } else {\n      this.selectIndexFromScrollPosition(event, column);\n    }\n  };\n\n  /**\n   * @private\n   * Scrolls to the nearest index based off a y offset from the FlatList.\n   * @param {NativeSyntheticEvent<NativeScrollEvent>} event: Event details from React Native.\n   * @param {string} column\n   * @param {number?} delay\n   * @return {void}\n   */\n  private selectIndexFromScrollPosition = (\n    event: NativeSyntheticEvent<NativeScrollEvent>,\n    column: string,\n    delay: number = 0,\n  ): void => {\n    if (!event.nativeEvent) return;\n    const { y } = event.nativeEvent.contentOffset;\n    const nearestOptionIndex = this.nearestOptionIndex(y, column);\n    setTimeout(() => {\n      const isDragging = this.cache.get(`${IS_DRAGGING}${column}`);\n      const isMomentumScrolling = this.cache.get(`${IS_MOMENTUM_SCROLLING}${column}`);\n      if (!isDragging && !isMomentumScrolling) {\n        this.selectIndex(nearestOptionIndex, column);\n      }\n    }, delay);\n  };\n\n  /**\n   * @private\n   * This method is called when the picker is closed unexpectedly without pressing the\n   * \"Done\" button in the top right hand corner.\n   * @return {Promise<void>}\n   */\n  private onCancel = async (): Promise<void> => {\n    const selections = { ...(await this.getCurrentSelections()) };\n    if (this.props.visible !== true) {\n      await this.hide();\n    }\n    this.props.onCancel(selections);\n  };\n\n  /**\n   * @private\n   * This method is called when the right action button (default: \"Done\") is tapped.\n   * It calls the `onConfirm` method and hides the picker.\n   * @return {Promise<void>}\n   */\n  private onConfirm = async (): Promise<void> => {\n    const selections = { ...(await this.getCurrentSelections()) };\n    if (this.props.visible !== true) {\n      await this.hide();\n    }\n    this.props.onConfirm(selections);\n  };\n\n  /**\n   * @private\n   * Used by the FlatList to render picklist items.\n   * @return {ReactElement}\n   */\n  private renderPickerItem = ({\n    item: {\n      label,\n      column,\n      key,\n      testID,\n      value\n    },\n    index,\n  }: {\n    item: RenderablePickerItem;\n    index: number;\n  }): ReactElement => {\n    const { selected } = this.state;\n    const { selectedItemTextColor, pickerItemTextColor, fontSize } = this.props;\n\n    return (\n      <View style={styles.pickerItem}>\n        <TouchableOpacity\n          activeOpacity={0.7}\n          onPress={() => \n            this.selectIndex(index, column)\n            }\n          testID={testID || key}\n        >\n           <Text\n              numberOfLines={1}\n              style={[styles.pickerItemText, \n                { color: (selected[column]  === value ) ?  selectedItemTextColor: pickerItemTextColor,\n                fontSize: fontSize }]}\n            >\n               {label}\n            </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  /**\n   * @private\n   * Forwards value changes onto the client from the Native iOS UIPicker when it is in use\n   * over the default JavaScript picker implementation.\n   * @param {UIPickerValueChangeEvent}\n   * @return {void}\n   */\n  private uiPickerValueChange = (\n    { nativeEvent: { column, value } }: UIPickerValueChangeEvent,\n  ): void => {\n    const { onValueChange } = this.props;\n    onValueChange({ column, value });\n  };\n\n  render() {\n    const { visible } = this.state;\n    const {\n      nativeTestID,\n      options,\n      defaultSelections,\n      size,\n      confirmText,\n      cancelText,\n      confirmTextColor,\n      pickerItemTextColor,\n      fontSizeToolbar,\n      fontFamilyConfirmText,\n      fontSize,\n      selectedItemTextColor,\n      toolbarBackgroundColor,\n      toolbarBorderColor,\n      selectionBackgroundColor,\n      selectionBorderColor,\n      backgroundColor,\n    } = this.props;\n\n    return (\n      <Modal\n        visible={visible}\n        animationType={Platform.select({\n          ios: 'fade',\n          default: 'none',\n        })}\n        transparent\n        onRequestClose={this.onCancel}\n      >\n        <Animatable.View\n          useNativeDriver\n          animation=\"fadeIn\"\n          easing=\"ease-out-cubic\"\n          duration={ANIMATION_TIME}\n          ref={this.modalContainerRef}\n          style={styles.modalContainer}\n          testID={TEST_IDS.PICKER}\n        >\n          <TouchableWithoutFeedback onPress={this.onCancel} testID={TEST_IDS.CLOSE_AREA}>\n            <View style={[styles.closeableContainer, { height: `${(100 - (size * 100))}%` }]} />\n          </TouchableWithoutFeedback>\n\n          <Animatable.View\n            useNativeDriver\n            animation={{\n              from: { opacity: 0, translateY: 250 },\n              to: { opacity: 1, translateY: 0 },\n            }}\n            easing=\"ease-out-quint\"\n            delay={100}\n            duration={ANIMATION_TIME}\n            ref={this.pickerContainerRef}\n            style={[styles.pickerContainer, { height: `${size * 100}%`, backgroundColor }]}\n          >\n            <Toolbar\n              fontSizeToolbar={fontSizeToolbar}\n              fontFamilyConfirmText={fontFamilyConfirmText}\n              confirmText={confirmText}\n              cancelText={cancelText}\n              confirmTextColor={confirmTextColor}\n              toolbarBackground={toolbarBackgroundColor}\n              toolbarBorderColor={toolbarBorderColor}\n              onConfirm={this.onConfirm}\n              onCancel={this.onCancel}\n            />\n\n            <View style={styles.selectableArea}>\n              {/* Native iOS Picker is enabled */}\n              {this.isNative() && (\n                <View style={styles.nativePickerContainer}>\n                  <UIPicker\n                    ref={this.uiPickerManager.reactRef}\n                    nativeTestID={{nativeTestID}}\n                    style={styles.nativePicker}\n                    options={SegmentedPicker.ApplyPickerOptionDefaults(options)}\n                    defaultSelections={defaultSelections}\n                    onValueChange={this.uiPickerValueChange}\n                    onEmitSelections={this.uiPickerManager.ingestSelections}\n                    theme={{\n                      itemHeight: ITEM_HEIGHT,\n                      selectionBackgroundColor,\n                      selectionBorderColor,\n                      pickerItemTextColor,\n                    }}\n                  />\n                </View>\n              )}\n\n              {/* Plain JavaScript implementation (default) */}\n              {!this.isNative() && (\n                <>\n                  <SelectionMarker\n                    backgroundColor={selectionBackgroundColor}\n                    borderColor={selectionBorderColor}\n                  />\n                  <View style={styles.pickerColumns} onLayout={this.measurePickersHeight}>\n                    {SegmentedPicker.ApplyPickerOptionDefaults(options).map((\n                      { key: column, testID: columnTestID, flex },\n                    ) => (\n                      <View style={[styles.pickerColumn, { flex }]} key={`${column}`}>\n                        <View style={styles.pickerList}>\n                          <FlatList\n                            data={this.columnItems(column).map(({\n                              label,\n                              value,\n                              key,\n                              testID,\n                            }) => ({\n                              label,\n                              value,\n                              column,\n                              testID,\n                              key: `${column}_${key || label}`,\n                            }))}\n                            renderItem={this.renderPickerItem}\n                            keyExtractor={item => item.key}\n                            initialNumToRender={40}\n                            getItemLayout={(data, index) => (\n                              {\n                                length: ITEM_HEIGHT,\n                                offset: ITEM_HEIGHT * index,\n                                index,\n                              }\n                            )}\n                            contentContainerStyle={{\n                              paddingTop: this.pickersVerticalPadding(),\n                              paddingBottom: this.pickersVerticalPadding(),\n                            }}\n                            showsVerticalScrollIndicator={false}\n                            ref={ref => this.setFlatListRef(column, ref)}\n                            onScroll={event => this.onScroll(event, column)}\n                            onScrollBeginDrag={() => this.onScrollBeginDrag(column)}\n                            onScrollEndDrag={event => this.onScrollEndDrag(event, column)}\n                            onMomentumScrollBegin={event => (\n                              this.onMomentumScrollBegin(event, column)\n                            )}\n                            onMomentumScrollEnd={event => (\n                              this.onMomentumScrollEnd(event, column)\n                            )}\n                            scrollEventThrottle={32}\n                            decelerationRate={Platform.select({\n                              ios: 1,\n                              android: undefined,\n                            })}\n                            testID={`${columnTestID}`}\n                          />\n                        </View>\n                      </View>\n                    ))}\n                  </View>\n                </>\n              )}\n            </View>\n          </Animatable.View>\n        </Animatable.View>\n      </Modal>\n    );\n  }\n}\n"],"names":["defaultProps","native","options","visible","defaultSelections","size","confirmText","cancelText","nativeTestID","undefined","confirmTextColor","pickerItemTextColor","selectedItemTextColor","toolbarBackgroundColor","toolbarBorderColor","selectionBackgroundColor","selectionBorderColor","fontSize","backgroundColor","onValueChange","onCancel","onConfirm","propTypes","PropTypes","arrayOf","shape","key","string","isRequired","items","label","value","testID","flex","number","bool","objectOf","propValue","componentName","location","propName","column","String","Error","props","fontSizeToolbar","fontFamilyConfirmText","func","ANIMATION_TIME","GUTTER_WIDTH","GUTTER_HEIGHT","ITEM_HEIGHTS","ios","default","TEXT_CORRECTION","TEST_IDS","PICKER","CONFIRM_BUTTON","CLOSE_AREA","TRACKING","FLAT_LIST_REF","LAST_SCROLL_OFFSET","SCROLL_DIRECTION","IS_DRAGGING","IS_MOMENTUM_SCROLLING","IS_DIRTY","ITEM_HEIGHT","Platform","select","StyleSheet","create","modalContainer","width","height","flexDirection","closeableContainer","pickerContainer","alignItems","selectableArea","alignSelf","pickerColumns","paddingTop","paddingRight","paddingBottom","pickerColumn","position","pickerList","pickerItem","justifyContent","pickerItemText","paddingLeft","textAlign","nativePickerContainer","Dimensions","get","marginLeft","nativePicker","toolbarContainer","borderBottomWidth","toolbarConfirmContainer","toolbarCancelContainer","toolbarConfirmText","fontWeight","toolbarCancelText","toolbarBackground","styles","borderBottomColor","color","fontFamily","selectionMarkerContainer","top","left","selectionMarkerBorder","android","selectionMarker","borderRadius","borderColor","requireNativeComponent","Cache","constructor","initialState","store","current","PromiseFactory","Map","e","id","Number","nextPromiseId","promises","set","delete","UIPickerManager","React","createRef","index","animated","ref","UIManager","dispatchViewManagerCommand","findNodeHandle","UIPicker","Commands","selectIndex","Promise","resolve","promise","reject","pid","promiseFactory","add","emitSelections","nativeEvent","selections","reactRef","SegmentedPicker","Component","setState","setTimeout","OS","done","cache","purge","modalContainerRef","fadeOut","emitEvent","zeroFallback","findItemIndexByLabel","columnItems","length","findItemIndexByValue","isNative","uiPickerManager","list","scrollToIndex","selectionChanges","selected","nativeSelections","getCurrentSelections","reduce","columns","lastOffset","nearestOptionIndex","filter","c","getColumn","findIndex","item","dirty","Object","keys","forEach","selectValue","includes","setDefaultSelections","event","layout","pickersHeight","state","offsetY","scrollDirection","rounding","adjustedOffsetY","nearestArrayMember","Math","columnSize","sign","y","contentOffset","lastScrollOffset","selectIndexFromScrollPosition","persist","delay","isDragging","isMomentumScrolling","hide","componentDidMount","show","componentDidUpdate","prevProps","visibleProp","visibleState","render","Animatable.View","from","opacity","translateY","to","pickerContainerRef","ApplyPickerOptionDefaults","uiPickerValueChange","ingestSelections","itemHeight","measurePickersHeight","map","columnTestID","renderPickerItem","data","offset","pickersVerticalPadding","setFlatListRef","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd"],"mappings":"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"}